{"ast":null,"code":"var _jsxFileName = \"/Users/henok/codefellows/personal-project/ecommerce_2021/frontend/src/screens/CartScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Message from '../components/Message.js';\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\nimport { cartAction } from '../store/actions/cartAction.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartScreen = ({\n  match,\n  location\n}) => {\n  _s();\n\n  const productId = match.params.id;\n  const dispatch = useDispatch();\n  const cartList = useSelector(state => state.cartList);\n  console.log(cartList.cartCollection);\n  let qty = location.search ? Number(location.search.split('=')[1]) : 1;\n  useEffect(() => {\n    dispatch(cartAction(productId, qty));\n  }, [dispatch, qty, productId]);\n\n  const removeFromCartHandler = id => {\n    console.log('Removed from cart');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 8,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Shopping Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), cartList.cartCollection.length === 0 ? /*#__PURE__*/_jsxDEV(Message, {\n        children: [\"your cart is empty \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"go Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 32\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n        variant: \"flush\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 2,\n      children: cartList.cartCollection.map(item => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 8,\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              src: item.image,\n              alt: item.name,\n              fluid: true,\n              rounded: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 3,\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/product/${item.product}`,\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 3,\n              children: item.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 2,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"button\",\n                variant: \"light\",\n                onClick: () => removeFromCartHandler(item.product)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, item.product, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartScreen, \"A+l5eEtbcCqBT+jeJNYWPVLCo88=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CartScreen;\nexport default CartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["/Users/henok/codefellows/personal-project/ecommerce_2021/frontend/src/screens/CartScreen.js"],"names":["React","useEffect","useDispatch","useSelector","Link","Message","Row","Col","ListGroup","Image","Form","Button","Card","cartAction","CartScreen","match","location","productId","params","id","dispatch","cartList","state","console","log","cartCollection","qty","search","Number","split","removeFromCartHandler","length","map","item","image","name","product","price"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Message from '../components/Message.js';\nimport {\n  Row,\n  Col,\n  ListGroup,\n  Image,\n  Form,\n  Button,\n  Card,\n} from 'react-bootstrap';\n\nimport { cartAction } from '../store/actions/cartAction.js';\n\nconst CartScreen = ({ match, location }) => {\n  const productId = match.params.id;\n  const dispatch = useDispatch();\n  const cartList = useSelector((state) => state.cartList);\n\n  console.log(cartList.cartCollection);\n  let qty = location.search ? Number(location.search.split('=')[1]) : 1;\n  useEffect(() => {\n    dispatch(cartAction(productId, qty));\n  }, [dispatch, qty, productId]);\n  const removeFromCartHandler = (id) => {\n    console.log('Removed from cart');\n  };\n  return (\n    <div>\n      <Col md={8}>\n        <h1>Shopping Cart</h1>\n        {cartList.cartCollection.length === 0 ? (\n          <Message>\n            your cart is empty <Link to='/'>go Back</Link>{' '}\n          </Message>\n        ) : (\n          <ListGroup variant='flush'></ListGroup>\n        )}\n      </Col>\n      <Col md={2}>\n        {cartList.cartCollection.map((item) => (\n          <ListGroup.Item key={item.product}>\n            <Row>\n              <Col md={8}>\n                <Image src={item.image} alt={item.name} fluid rounded />\n              </Col>\n              <Col md={3}>\n                <Link to={`/product/${item.product}`}>{item.name}</Link>\n                <Col md={3}>{item.price}</Col>\n                <Col md={3}>\n                  {/* <Form.Control\n                    as='select'\n                    value={qty}\n                    onChange={(e) =>\n                      dispatch(cartAction(item.product, Number(e.target.value)))\n                    }\n                  >\n                    {[...Array(item.productListById.countInStock).keys()].map(\n                      (item) => (\n                        <option key={item + 1} value={item + 1}>\n                          {item + 1}\n                        </option>\n                      )\n                    )}\n                  </Form.Control> */}\n                </Col>\n                <Col md={2}>\n                  <Button\n                    type='button'\n                    variant='light'\n                    onClick={() => removeFromCartHandler(item.product)}\n                  ></Button>\n                </Col>\n              </Col>\n            </Row>\n          </ListGroup.Item>\n        ))}\n      </Col>\n    </div>\n  );\n};\nexport default CartScreen;\n"]},"metadata":{},"sourceType":"module"}