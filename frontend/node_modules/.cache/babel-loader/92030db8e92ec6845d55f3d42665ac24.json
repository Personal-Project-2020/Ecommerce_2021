{"ast":null,"code":"var _jsxFileName = \"/Users/henok/codefellows/personal-project/ecommerce_2021/frontend/src/screens/ProductScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Image, ListGroup, Card, Button } from 'react-bootstrap';\nimport Rating from '../components/Rating.js';\nimport { itemProduct } from '../store/actions/productByIdAction.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductScreen = ({\n  match\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const itemList = useSelector(state => state.itemProduct);\n  useEffect(() => {\n    dispatch(itemProduct(match.params.id));\n  }, [dispatch, match]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-dark my-3\",\n      to: \"/\",\n      children: [' ', \"Home Page\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: itemList.productListById.image,\n          alt: itemList.productListById.name,\n          fluid: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: itemList.productListById.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Rating, {\n              value: itemList.productListById.rating,\n              text: `${itemList.productListById.numReviews} reviews`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [\"price : $\", itemList.productListById.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [\"Description : \", itemList.productListById.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: \" price:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [\"$\", itemList.productListById.price]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: \"status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: itemList.productListById.countInStock > 1 ? 'In stock' : 'out of stock'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-black\",\n                type: \"button\",\n                disabled: itemList.productListById.countInStock === 0,\n                children: \"Add TO Cart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProductScreen, \"Uv/TFK8ouPmHqq322911jUS24+Y=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ProductScreen;\nexport default ProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"sources":["/Users/henok/codefellows/personal-project/ecommerce_2021/frontend/src/screens/ProductScreen.js"],"names":["React","useEffect","useDispatch","useSelector","Link","Row","Col","Image","ListGroup","Card","Button","Rating","itemProduct","ProductScreen","match","dispatch","itemList","state","params","id","productListById","image","name","rating","numReviews","price","description","countInStock"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Image, ListGroup, Card, Button } from 'react-bootstrap';\nimport Rating from '../components/Rating.js';\nimport { itemProduct } from '../store/actions/productByIdAction.js';\n\nconst ProductScreen = ({ match }) => {\n  const dispatch = useDispatch();\n  const itemList = useSelector((state) => state.itemProduct);\n  useEffect(() => {\n    dispatch(itemProduct(match.params.id));\n  }, [dispatch, match]);\n\n  return (\n    <>\n      <Link className='btn btn-dark my-3' to='/'>\n        {' '}\n        Home Page\n      </Link>\n      <Row>\n        <Col md={3}>\n          <Image\n            src={itemList.productListById.image}\n            alt={itemList.productListById.name}\n            fluid\n          />\n        </Col>\n        <Col md={4}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h3>{itemList.productListById.name}</h3>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Rating\n                value={itemList.productListById.rating}\n                text={`${itemList.productListById.numReviews} reviews`}\n              />\n            </ListGroup.Item>\n            <ListGroup.Item>\n              price : ${itemList.productListById.price}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              Description : {itemList.productListById.description}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col>\n          <Card>\n            <ListGroup.Item>\n              <Row>\n                <Col> price:</Col>\n                <Col>\n                  <strong>${itemList.productListById.price}</strong>\n                </Col>\n              </Row>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Row>\n                <Col>status:</Col>\n                <Col>\n                  {itemList.productListById.countInStock > 1\n                    ? 'In stock'\n                    : 'out of stock'}\n                </Col>\n              </Row>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Row>\n                <Button\n                  className='btn-black'\n                  type='button'\n                  disabled={itemList.productListById.countInStock === 0}\n                >\n                  Add TO Cart\n                </Button>\n              </Row>\n            </ListGroup.Item>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\nexport default ProductScreen;\n"]},"metadata":{},"sourceType":"module"}